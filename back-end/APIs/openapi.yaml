openapi: 3.0.3
info:
  title: QRmeat API
  description: aw-project, Grupo 17, Beatriz Patatas Nº56950, Gonçalo Rocha Nº51202
  version: 1.0.0
paths:
  /auth/{client_id}:
    get:
      summary: Retrieve client authentication details
      tags:
        - ClientAuth
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Client authentication details retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAuth'
    put:
      summary: Update client authentication details
      tags:
        - ClientAuth
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authentication details updated.
    delete:
      summary: Remove client authentication details
      tags:
        - ClientAuth
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Authentication details removed.
  /auth/login:
    post:
      summary: Create session token
      tags:
        - ClientAuth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Session token created.
  /clients:
    get:
      summary: Retrieve list of all clients
      tags:
        - ClientInfo
      responses:
        '200':
          description: List of all clients retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientInfo'
    post:
      summary: Create a new client profile
      tags:
        - ClientInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Client profile created.
  /clients/{client_id}:
    get:
      summary: Retrieve client details
      tags:
        - ClientInfo
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Client details retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInfo'
    put:
      summary: Update client information
      tags:
        - ClientInfo
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Client information updated.
    delete:
      summary: Remove client information
      tags:
        - ClientInfo
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Client information removed.
  /news:
    get:
      summary: Retrieve list of news articles
      tags:
        - NewsService
      responses:
        '200':
          description: List of news articles retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsService'
    post:
      summary: Create a news article
      tags:
        - NewsService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: News article created.
  /news/{news_id}:
    get:
      summary: Retrieve news article details
      tags:
        - NewsService
      parameters:
        - name: news_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: News article retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsService'
    put:
      summary: Update news article
      tags:
        - NewsService
      parameters:
        - name: news_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: News article updated.
    delete:
      summary: Remove news article
      tags:
        - NewsService
      parameters:
        - name: news_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: News article removed.
  /products:
    get:
      summary: Retrieve list of products
      tags:
        - ProductInfo
      responses:
        '200':
          description: List of products retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInfo'
    post:
      summary: Add a new product
      tags:
        - ProductInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
      responses:
        '201':
          description: Product added.
  /products/{product_id}:
    get:
      summary: Retrieve product details
      tags:
        - ProductInfo
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
    put:
      summary: Update product information
      tags:
        - ProductInfo
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
      responses:
        '200':
          description: Product information updated.
    delete:
      summary: Remove product
      tags:
        - ProductInfo
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product removed.
  /prices/products:
    get:
      summary: Retrieve product prices
      tags:
        - ProductPrice
      responses:
        '200':
          description: Product prices retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPrice'
    post:
      summary: Add a product price
      tags:
        - ProductPrice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                price:
                  type: integer
      responses:
        '201':
          description: Price added.
  /prices/products/{product_id}:
    get:
      summary: Retrieve specific product price
      tags:
        - ProductPrice
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product price retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPrice'
    put:
      summary: Update product price
      tags:
        - ProductPrice
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: integer
      responses:
        '200':
          description: Product price updated.
    delete:
      summary: Remove product price
      tags:
        - ProductPrice
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product price removed.
  /reviews/products:
    get:
      summary: Retrieve all product reviews
      tags:
        - ProductService
      responses:
        '200':
          description: List of product reviews retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductService'
    post:
      summary: Add a product review
      tags:
        - ProductService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: integer
                username:
                  type: string
                product_id:
                  type: integer
                evaluation:
                  type: integer
      responses:
        '201':
          description: Review added.
  /reviews/products/{feedback_id}:
    get:
      summary: Retrieve specific product review
      tags:
        - ProductService
      parameters:
        - name: feedback_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product review retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductService'
    put:
      summary: Update product review
      tags:
        - ProductService
      parameters:
        - name: feedback_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                evaluation:
                  type: integer
      responses:
        '200':
          description: Product review updated.
    delete:
      summary: Remove product review
      tags:
        - ProductService
      parameters:
        - name: feedback_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product review removed.
  /details/products/{product_id}:
    get:
      summary: Retrieve product details
      tags:
        - ProductDetails
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetails'
    put:
      summary: Update product details
      tags:
        - ProductDetails
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                average_gains:
                  type: number
                  format: float
                sale_price:
                  type: number
                  format: float
                total_cost:
                  type: number
                  format: float
      responses:
        '200':
          description: Product details updated.
    delete:
      summary: Remove product details
      tags:
        - ProductDetails
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product details removed.
  /statistics/{stats_id}:
    get:
      summary: Read only access to specific statistics
      tags:
        - StatsService
      parameters:
        - name: stats_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Statistics retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsService'
    put:
      summary: Update a specific statistic
      tags:
        - StatsService
      parameters:
        - name: stats_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                num_value:
                  type: number
                description:
                  type: string
                type:
                  type: string
      responses:
        '200':
          description: Statistics updated.
    delete:
      summary: Remove a specific statistic
      tags:
        - StatsService
      parameters:
        - name: stats_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Statistics removed.
  /scan/{product_id}:
    get:
      summary: Decodes the QR code linked to a specific product.
      tags:
        - QRCode
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: QR code decoded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QRCode'
  /scan:
    post:
      summary: Sends an image of a QR code to be scanned and processed.
      tags:
        - QRCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: QR code processed.
components:
  schemas:
    ClientAuth:
      type: object
      properties:
        client_id:
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
    ClientInfo:
      type: object
      properties:
        client_id:
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
        status:
          type: string
        list_feedback:
          type: array
          items:
            type: integer
        my_products:
          type: array
          items:
            type: integer
    NewsService:
      type: object
      properties:
        news_id:
          type: integer
        image:
          type: string
          format: url
        title:
          type: string
        content:
          type: string
        date:
          type: string
          format: date
        publisher:
          type: string
    ProductInfo:
      type: object
      properties:
        product_id:
          type: integer
        display_image:
          type: string
        name:
          type: string
        store:
          type: string
        price:
          type: number
          format: float
        producer:
          type: string
        food:
          type: string
        origin:
          type: string
    ProductPrice:
      type: object
      properties:
        product_id:
          type: integer
        price:
          type: integer
    ProductService:
      type: object
      properties:
        feedback_id:
          type: integer
        client_id:
          type: integer
        username:
          type: string
        product_id:
          type: integer
        evaluation:
          type: integer
    ProductDetails:
      type: object
      properties:
        product_id:
          type: integer
        average_gains:
          type: number
          format: float
        sale_price:
          type: number
          format: float
        total_cost:
          type: number
          format: float
    StatsService:
      type: object
      properties:
        stats_id:
          type: integer
        num_value:
          type: number
          format: float
        description:
          type: string
        type:
          type: string
    QRCode:
      type: object
      properties:
        product_id:
          type: integer
        decoded_data:
          type: string